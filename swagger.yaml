swagger: "2.0"
info:
  version: 1.0.0
  title: "Fetchsandbox"
  description: Managing and monitoring notes
  termsOfService: http://swagger.io/terms/
  contact:
    name: Tessaro Filippo
    email: filippo.tessaro@studenti.unitn.it
    url: https://fetchsandbox.herokuapp.com/
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: fetchsandbox.herokuapp.com
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /notes:
    get:
      description: Retrieves notes 
      operationId: getNotes
      parameters:
        - name: title
          in: query
          description: title of a note
          required: false
          type: string
        - name: body
          in: query
          description: body of the note
          required: false
          type: string
      responses:
        200:
          description: list of notes which are in the DB
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Uploads a new note.
      operationId: addAssignment
      parameters:
        - name: title
          in: body
          description: new note
          required: true
          schema:
            $ref: '#/definitions/NewNote'
      responses:
        201:
          description: assignment created response
          schema:
            $ref: '#/definitions/Assignment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /assignments/{id}:
    get:
      description: Returns an assignment
      operationId: findbyassignment id
      parameters:
        - name: id
          in: path
          description: ID of assignment to fetch
          required: true
          type: string
          x-example: 'some-example'
      responses:
        200:
          description: OK - assignment
          schema:
            $ref: '#/definitions/Assignment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Updates an existing assignment, or create a new one with ID.
      operationId: updateAssignment
      parameters:
        - name: id
          in: path
          description: ID of assignment to edit or create
          required: true
          type: string
          x-example: 'some-example'
        - name: assignment
          in: body
          description: assignment
          required: true
          schema:
            $ref: '#/definitions/Assignment'
      responses:
        202:
          description: assignment update response
          schema:
            $ref: '#/definitions/Assignment'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single assignment based on the ID supplied
      operationId: deleteAssignment
      parameters:
        - name: id
          in: path
          description: ID of assignment to delete
          required: true
          type: string
          x-example: 'erwtre34-36fws'
      responses:
        204:
          description: assigment deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Assignment:
    allOf:
      - $ref: '#/definitions/NewNote'
      - required:
        - assignmentID
        properties:
          assignmentID:
            type: string
          ipAddress:
            type: string
            format: ipv6
          dateUpdated: 
            type: string
            format: date-time
  NewNote:
    required:
      - title
      - body
    properties:
      title:
        type: string
      body:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string